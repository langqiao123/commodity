16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\account\dao\AccountDao.class]
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\dict\dao\DictDao.class]
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\goods\dao\GoodsMapper.class]
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\resources\dao\ResourcesDao.class]
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\role\dao\RoleDao.class]
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'accountDao' and 'com.pptv.ott.commodity.account.dao.AccountDao' mapperInterface
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'dictDao' and 'com.pptv.ott.commodity.dict.dao.DictDao' mapperInterface
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'goodsMapper' and 'com.pptv.ott.commodity.goods.dao.GoodsMapper' mapperInterface
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'resourcesDao' and 'com.pptv.ott.commodity.resources.dao.ResourcesDao' mapperInterface
16:42:26  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'roleDao' and 'com.pptv.ott.commodity.role.dao.RoleDao' mapperInterface
16:42:27  DEBUG org.apache.ibatis.logging.LogFactory  - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
16:42:28  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed configuration file: 'class path resource [mybatis-config.xml]'
16:42:28  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\account\mapper\AccountMapper.xml]'
16:42:28  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\dict\mapper\DictMapper.xml]'
16:42:28  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\goods\mapper\GoodsMapper.xml]'
16:42:28  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\resources\mapper\ResourcesMapper.xml]'
16:42:28  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\role\mapper\RoleMapper.xml]'
16:42:29  DEBUG c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - Template loader path [ServletContext resource [/WEB-INF/html/]] resolved to file path [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\html]
16:42:29  INFO  c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - ClassTemplateLoader for Spring macros added to FreeMarker configuration
16:42:33  DEBUG c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - Template loader path [ServletContext resource [/WEB-INF/html/]] resolved to file path [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\html]
16:42:33  INFO  c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - ClassTemplateLoader for Spring macros added to FreeMarker configuration
16:43:10  INFO  c.p.o.c.a.controller.LoginController  - 军绿色扣篮大赛份简历
16:43:10  ERROR c.p.o.c.a.controller.LoginController  - sdasdfasdf
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69b61edc]
16:43:12  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@485eda46] will be managed by Spring
16:43:12  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@485eda46]
16:43:12  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:43:12  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69b61edc]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69b61edc]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69b61edc]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a47c744]
16:43:12  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@485eda46] will be managed by Spring
16:43:12  DEBUG c.p.o.c.r.d.R.findByAccountId  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@485eda46]
16:43:12  DEBUG c.p.o.c.r.d.R.findByAccountId  - ==>  Preparing: select DISTINCT p.* from t_resources p INNER JOIN t_role_resources rp on p.ID=rp.resources_ID INNER JOIN t_role r ON r.id=rp.ROLE_ID INNER JOIN t_account_role ur ON ur.ROLE_ID =rp.ROLE_ID INNER JOIN t_account u ON u.id = ur.USER_ID where u.id=? and u.disabled=0 and p.disabled=0 order by p.sort 
16:43:12  DEBUG c.p.o.c.r.d.R.findByAccountId  - ==> Parameters: 1(Long)
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a47c744]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a47c744]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a47c744]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39011bd4]
16:43:12  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@485eda46] will be managed by Spring
16:43:12  DEBUG c.p.o.c.r.d.R.findByRoleId  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@485eda46]
16:43:12  DEBUG c.p.o.c.r.d.R.findByRoleId  - ==>  Preparing: select DISTINCT p.* from t_resources p INNER JOIN t_role_resources rp on p.ID=rp.resources_ID INNER JOIN t_role r ON r.id=rp.ROLE_ID where r.id=? and p.disabled=0 order by p.sort 
16:43:12  DEBUG c.p.o.c.r.d.R.findByRoleId  - ==> Parameters: 1(Long)
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39011bd4]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39011bd4]
16:43:12  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39011bd4]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c4e598]
16:51:23  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:23  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:23  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==>  Preparing: select count(0) from (select * from t_account where 1=1) as tmp_count 
16:51:23  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==> Parameters: 
16:51:23  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==>  Preparing: select * from t_account where 1=1 limit 0,10 
16:51:23  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==> Parameters: 
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c4e598]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c4e598]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c4e598]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6120d117]
16:51:23  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6120d117]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6120d117]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6120d117]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@537f5142]
16:51:23  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@537f5142]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@537f5142]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@537f5142]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b1ff70]
16:51:23  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b1ff70]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b1ff70]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b1ff70]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65210d73]
16:51:23  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65210d73]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65210d73]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65210d73]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61500e23]
16:51:23  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:23  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61500e23]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61500e23]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61500e23]
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:23  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@594d8671]
16:51:23  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:23  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@594d8671]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@594d8671]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@594d8671]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33adeb83]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33adeb83]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33adeb83]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33adeb83]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d47b54f]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d47b54f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d47b54f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d47b54f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3837cbed]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3837cbed]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3837cbed]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3837cbed]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96c73a5]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96c73a5]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96c73a5]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96c73a5]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b57f340]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b57f340]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b57f340]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b57f340]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea1334c]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea1334c]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea1334c]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea1334c]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3d6171]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3d6171]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3d6171]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3d6171]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f54634]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f54634]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f54634]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f54634]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44db43a4]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44db43a4]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44db43a4]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44db43a4]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd78e8]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd78e8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd78e8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd78e8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7939558c]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7939558c]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7939558c]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7939558c]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba61048]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba61048]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba61048]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba61048]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e938e2d]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e938e2d]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e938e2d]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e938e2d]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdd8a4]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdd8a4]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdd8a4]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdd8a4]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf75455]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf75455]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf75455]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bf75455]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b32215f]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b32215f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b32215f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b32215f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24087b07]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24087b07]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24087b07]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24087b07]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c9fad1]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c9fad1]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c9fad1]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c9fad1]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba32b8f]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba32b8f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba32b8f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba32b8f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369df9c8]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369df9c8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369df9c8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369df9c8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@381bb27]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@381bb27]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@381bb27]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@381bb27]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34ff32eb]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34ff32eb]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34ff32eb]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34ff32eb]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30301314]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30301314]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30301314]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30301314]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69f9286e]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69f9286e]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69f9286e]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69f9286e]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18484cf8]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select count(0) from (select * from t_role where 1=1 order by sort) as tmp_count 
16:51:24  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 
16:51:24  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select * from t_role where 1=1 order by sort limit 0,10 
16:51:24  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18484cf8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18484cf8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18484cf8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cc51d05]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cc51d05]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cc51d05]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cc51d05]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c0b6759]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c0b6759]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c0b6759]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c0b6759]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510c0854]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510c0854]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510c0854]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510c0854]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555225e1]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555225e1]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555225e1]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555225e1]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e50db26]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e50db26]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e50db26]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e50db26]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d309c03]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d309c03]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d309c03]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d309c03]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5587dc]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5587dc]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5587dc]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5587dc]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c439134]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c439134]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c439134]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c439134]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44441190]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44441190]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44441190]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44441190]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140d8862]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140d8862]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140d8862]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140d8862]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ce4a26]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ce4a26]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ce4a26]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ce4a26]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db9d448]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db9d448]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db9d448]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db9d448]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c7f6f8]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c7f6f8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c7f6f8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c7f6f8]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2807d52e]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2807d52e]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2807d52e]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2807d52e]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87fd900]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87fd900]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87fd900]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87fd900]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42926a68]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42926a68]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42926a68]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42926a68]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ca04d5]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ca04d5]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ca04d5]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ca04d5]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108d0e0a]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108d0e0a]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108d0e0a]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108d0e0a]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d65a443]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d65a443]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d65a443]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d65a443]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6285b957]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6285b957]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6285b957]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6285b957]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69899e14]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69899e14]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69899e14]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69899e14]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f0ac1f]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f0ac1f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f0ac1f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f0ac1f]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585208d9]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585208d9]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585208d9]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585208d9]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927fec]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927fec]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927fec]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927fec]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35617d92]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35617d92]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35617d92]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35617d92]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a7a8b3]
16:51:24  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:24  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a7a8b3]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a7a8b3]
16:51:24  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a7a8b3]
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ac36444]
16:51:26  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:26  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:26  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:26  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ac36444]
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ac36444]
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ac36444]
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d00b2b3]
16:51:26  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:26  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:26  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:26  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d00b2b3]
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d00b2b3]
16:51:26  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d00b2b3]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbea42c]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==>  Preparing: select count(0) from (select id, name from t_goods where 1=1) as tmp_count 
16:51:31  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==> Parameters: 
16:51:31  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==>  Preparing: select id, name from t_goods where 1=1 limit 0,10 
16:51:31  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==> Parameters: 
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbea42c]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbea42c]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbea42c]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d76db1]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d76db1]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d76db1]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d76db1]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@216e3130]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@216e3130]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@216e3130]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@216e3130]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1dd09d]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1dd09d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1dd09d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1dd09d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38e8d379]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38e8d379]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38e8d379]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38e8d379]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e1ad82]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e1ad82]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e1ad82]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e1ad82]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f0ae038]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f0ae038]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f0ae038]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f0ae038]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d95f129]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d95f129]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d95f129]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d95f129]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299eb4d0]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299eb4d0]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299eb4d0]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299eb4d0]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d4fc1b]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d4fc1b]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d4fc1b]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d4fc1b]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bb68367]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bb68367]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bb68367]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bb68367]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@449e4ba6]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@449e4ba6]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@449e4ba6]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@449e4ba6]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37cad375]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37cad375]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37cad375]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37cad375]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d467061]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d467061]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d467061]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d467061]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1697c87]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1697c87]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1697c87]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1697c87]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d541d]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d541d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d541d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d541d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a7194]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a7194]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a7194]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a7194]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175631c3]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175631c3]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175631c3]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175631c3]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561984e9]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561984e9]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561984e9]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561984e9]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79700d22]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79700d22]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79700d22]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79700d22]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@107eab3d]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@107eab3d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@107eab3d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@107eab3d]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70324315]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70324315]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70324315]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70324315]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e455b65]
16:51:31  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:31  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e455b65]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e455b65]
16:51:31  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e455b65]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4541cca4]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==>  Preparing: select count(0) from (select * from t_account where 1=1) as tmp_count 
16:51:49  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==> Parameters: 
16:51:49  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==>  Preparing: select * from t_account where 1=1 limit 0,10 
16:51:49  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==> Parameters: 
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4541cca4]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4541cca4]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4541cca4]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497db9d3]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497db9d3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497db9d3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497db9d3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7638885b]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7638885b]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7638885b]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7638885b]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@404cb7a3]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@404cb7a3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@404cb7a3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@404cb7a3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12af80e2]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12af80e2]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12af80e2]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12af80e2]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4088eb]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4088eb]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4088eb]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4088eb]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295131f7]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295131f7]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295131f7]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295131f7]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2150be21]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2150be21]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2150be21]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2150be21]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfaf96f]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfaf96f]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfaf96f]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfaf96f]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b897542]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b897542]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b897542]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b897542]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e673af8]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e673af8]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e673af8]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e673af8]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753de05e]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753de05e]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753de05e]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@753de05e]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d438ab3]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d438ab3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d438ab3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d438ab3]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ebb616]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ebb616]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ebb616]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ebb616]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614850ff]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614850ff]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614850ff]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614850ff]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9429ead]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9429ead]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9429ead]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9429ead]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b4e3bed]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b4e3bed]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b4e3bed]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b4e3bed]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e003b38]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e003b38]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e003b38]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e003b38]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c5f3b0]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c5f3b0]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c5f3b0]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c5f3b0]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75afdae4]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75afdae4]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75afdae4]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75afdae4]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d1d461c]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d1d461c]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d1d461c]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d1d461c]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4960b159]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4960b159]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4960b159]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4960b159]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f018ca0]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f018ca0]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f018ca0]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f018ca0]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@160e9010]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@160e9010]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@160e9010]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@160e9010]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b30e5da]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b30e5da]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b30e5da]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b30e5da]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7f6225]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7f6225]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7f6225]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7f6225]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a19db0d]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a19db0d]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a19db0d]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a19db0d]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b5935ae]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b5935ae]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b5935ae]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b5935ae]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bbaee]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bbaee]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bbaee]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bbaee]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a5b26]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a5b26]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a5b26]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a5b26]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb3d168]
16:51:49  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:49  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb3d168]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb3d168]
16:51:49  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb3d168]
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea31504]
16:51:53  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:53  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:53  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select count(0) from (select * from t_role where 1=1 and disabled=? order by sort) as tmp_count 
16:51:53  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 0(Integer)
16:51:53  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select * from t_role where 1=1 and disabled=? order by sort limit 0,50 
16:51:53  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 0(Integer)
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea31504]
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea31504]
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea31504]
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a494a34]
16:51:53  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:53  DEBUG c.p.o.c.r.d.RoleDao.findByAccountId  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:53  DEBUG c.p.o.c.r.d.RoleDao.findByAccountId  - ==>  Preparing: select * from t_role r inner join t_account_role ar on r.id=ar.role_id where r.disabled=0 and ar.user_id=? 
16:51:53  DEBUG c.p.o.c.r.d.RoleDao.findByAccountId  - ==> Parameters: 1(Long)
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a494a34]
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a494a34]
16:51:53  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a494a34]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aae2a41]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select count(0) from (select * from t_role where 1=1 order by sort) as tmp_count 
16:51:57  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 
16:51:57  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select * from t_role where 1=1 order by sort limit 0,10 
16:51:57  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aae2a41]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aae2a41]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aae2a41]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d083d00]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d083d00]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d083d00]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d083d00]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e0b3e0]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e0b3e0]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e0b3e0]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e0b3e0]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3865764d]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3865764d]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3865764d]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3865764d]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61dfeca4]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61dfeca4]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61dfeca4]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61dfeca4]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55686109]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55686109]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55686109]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55686109]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20985586]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20985586]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20985586]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20985586]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a81ce86]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a81ce86]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a81ce86]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a81ce86]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61773516]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61773516]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61773516]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61773516]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a9edebd]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a9edebd]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a9edebd]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a9edebd]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e106fb]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e106fb]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e106fb]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e106fb]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d00450f]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d00450f]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d00450f]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d00450f]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f87c9e]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f87c9e]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f87c9e]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f87c9e]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@459b6e43]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@459b6e43]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@459b6e43]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@459b6e43]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a87ee5]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a87ee5]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a87ee5]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a87ee5]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6674e825]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6674e825]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6674e825]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6674e825]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fb3cc2]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fb3cc2]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fb3cc2]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fb3cc2]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f42602e]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f42602e]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f42602e]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f42602e]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8a335f]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8a335f]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8a335f]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8a335f]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67edec09]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67edec09]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67edec09]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67edec09]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23a40f0b]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23a40f0b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23a40f0b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23a40f0b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4028807a]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4028807a]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4028807a]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4028807a]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f0e3b1]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f0e3b1]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f0e3b1]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f0e3b1]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e506a30]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e506a30]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e506a30]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e506a30]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c9af1f8]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c9af1f8]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c9af1f8]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c9af1f8]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e2cbbf]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e2cbbf]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e2cbbf]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e2cbbf]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4af3dc92]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4af3dc92]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4af3dc92]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4af3dc92]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1c70a]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.r.dao.ResourcesDao.list  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.r.dao.ResourcesDao.list  - ==>  Preparing: select * from t_resources where 1=1 
16:51:57  DEBUG c.p.o.c.r.dao.ResourcesDao.list  - ==> Parameters: 
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1c70a]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1c70a]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1c70a]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f6119db]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f6119db]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f6119db]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f6119db]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f3ab0b]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f3ab0b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f3ab0b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f3ab0b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e312ee9]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e312ee9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e312ee9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e312ee9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c3e12b]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c3e12b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c3e12b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c3e12b]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ee0ab56]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ee0ab56]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ee0ab56]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ee0ab56]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4719e7a9]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4719e7a9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4719e7a9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4719e7a9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fbd3be]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fbd3be]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fbd3be]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fbd3be]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42282c9]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42282c9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42282c9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42282c9]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57726a5d]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:57  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57726a5d]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57726a5d]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57726a5d]
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:57  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70863de6]
16:51:57  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:57  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70863de6]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70863de6]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70863de6]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4763de64]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4763de64]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4763de64]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4763de64]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bdd3381]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bdd3381]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bdd3381]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bdd3381]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de743c2]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de743c2]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de743c2]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de743c2]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@415d98c]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@415d98c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@415d98c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@415d98c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@794bee3]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@794bee3]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@794bee3]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@794bee3]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77a2b7e]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77a2b7e]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77a2b7e]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77a2b7e]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703af693]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703af693]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703af693]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703af693]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e22361d]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e22361d]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e22361d]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e22361d]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a916c5]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a916c5]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a916c5]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a916c5]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae125e0]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae125e0]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae125e0]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ae125e0]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b3445a]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b3445a]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b3445a]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b3445a]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c1a91d]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c1a91d]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c1a91d]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c1a91d]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c6c698]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c6c698]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c6c698]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c6c698]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0065b4]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0065b4]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0065b4]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e0065b4]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33d0f7a9]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33d0f7a9]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33d0f7a9]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33d0f7a9]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181bb6ac]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181bb6ac]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181bb6ac]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181bb6ac]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416bcd8f]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416bcd8f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416bcd8f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416bcd8f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fe949e1]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fe949e1]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fe949e1]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fe949e1]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b8503c]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b8503c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b8503c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b8503c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109ee2fd]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109ee2fd]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109ee2fd]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109ee2fd]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29399a16]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29399a16]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29399a16]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29399a16]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@892962f]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@892962f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@892962f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@892962f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f4da77]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f4da77]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f4da77]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f4da77]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a710cc5]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a710cc5]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a710cc5]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a710cc5]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae747d3]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae747d3]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae747d3]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae747d3]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc6879]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc6879]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc6879]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc6879]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ce3ef]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ce3ef]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ce3ef]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ce3ef]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfc2e7f]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfc2e7f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfc2e7f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfc2e7f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77234f8b]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77234f8b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77234f8b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77234f8b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22deca2a]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22deca2a]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22deca2a]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22deca2a]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64449601]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64449601]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64449601]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64449601]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ab4534]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ab4534]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ab4534]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ab4534]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28556101]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28556101]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28556101]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28556101]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e60ff8c]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e60ff8c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e60ff8c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e60ff8c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3889403b]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3889403b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3889403b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3889403b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6806aaad]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6806aaad]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6806aaad]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6806aaad]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ded4936]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ded4936]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ded4936]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ded4936]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb88c0]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb88c0]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb88c0]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb88c0]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdb5306]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdb5306]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdb5306]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdb5306]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c5636c]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c5636c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c5636c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c5636c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f097282]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f097282]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f097282]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f097282]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8bf005]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8bf005]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8bf005]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8bf005]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f7862b]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f7862b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f7862b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f7862b]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6a851f]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6a851f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6a851f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6a851f]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ddf2e8]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ddf2e8]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ddf2e8]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ddf2e8]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e74070c]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e74070c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e74070c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e74070c]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52870dca]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52870dca]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52870dca]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52870dca]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1233eb]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1233eb]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1233eb]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1233eb]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77619c63]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77619c63]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77619c63]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77619c63]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e968df]
16:51:58  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:58  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e968df]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e968df]
16:51:58  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e968df]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2890225]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.dict.dao.DictDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.dict.dao.DictDao.listPage  - ==>  Preparing: select count(0) from (select * from t_dict where 1=1) as tmp_count 
16:51:59  DEBUG c.p.o.c.dict.dao.DictDao.listPage  - ==> Parameters: 
16:51:59  DEBUG c.p.o.c.dict.dao.DictDao.listPage  - ==>  Preparing: select * from t_dict where 1=1 limit 0,10 
16:51:59  DEBUG c.p.o.c.dict.dao.DictDao.listPage  - ==> Parameters: 
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2890225]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2890225]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2890225]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fd50477]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fd50477]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fd50477]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fd50477]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a013ec]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a013ec]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a013ec]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a013ec]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1115887b]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1115887b]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1115887b]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1115887b]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66244eb3]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66244eb3]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66244eb3]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66244eb3]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@255fe20b]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@255fe20b]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@255fe20b]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@255fe20b]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494b1af5]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494b1af5]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494b1af5]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494b1af5]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5a3190]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5a3190]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5a3190]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5a3190]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2478ad72]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2478ad72]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2478ad72]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2478ad72]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5784d884]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5784d884]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5784d884]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5784d884]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1820e062]
16:51:59  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:51:59  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1820e062]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1820e062]
16:51:59  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1820e062]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@280dbeb]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==>  Preparing: select count(0) from (select id, name from t_goods where 1=1) as tmp_count 
16:52:08  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==> Parameters: 
16:52:08  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==>  Preparing: select id, name from t_goods where 1=1 limit 0,10 
16:52:08  DEBUG c.p.o.c.g.dao.GoodsMapper.listPage  - ==> Parameters: 
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@280dbeb]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@280dbeb]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@280dbeb]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab7a43a]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab7a43a]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab7a43a]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab7a43a]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6583023d]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6583023d]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6583023d]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6583023d]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae2c4da]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae2c4da]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae2c4da]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae2c4da]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d667fb2]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d667fb2]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d667fb2]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d667fb2]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1d637e]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1d637e]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1d637e]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1d637e]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@573f28a5]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@573f28a5]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@573f28a5]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@573f28a5]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e3107a4]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e3107a4]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e3107a4]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e3107a4]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e25145]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e25145]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e25145]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e25145]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@579b88a6]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@579b88a6]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@579b88a6]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@579b88a6]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1cb608]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1cb608]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1cb608]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1cb608]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e258d31]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e258d31]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e258d31]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e258d31]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b03074d]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b03074d]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b03074d]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b03074d]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aef47be]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aef47be]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aef47be]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aef47be]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b82d4cf]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b82d4cf]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b82d4cf]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b82d4cf]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@604e5512]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@604e5512]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@604e5512]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@604e5512]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a581664]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a581664]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a581664]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a581664]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6870191a]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6870191a]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6870191a]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6870191a]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@187c732e]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@187c732e]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@187c732e]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@187c732e]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3661ff4b]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3661ff4b]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3661ff4b]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3661ff4b]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11967031]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11967031]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11967031]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11967031]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f57c049]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f57c049]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f57c049]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f57c049]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad4e861]
16:52:08  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3] will be managed by Spring
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7927cd3]
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
16:52:08  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad4e861]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad4e861]
16:52:08  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad4e861]
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\account\dao\AccountDao.class]
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\dict\dao\DictDao.class]
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\goods\dao\GoodsMapper.class]
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\resources\dao\ResourcesDao.class]
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Identified candidate component class: file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\role\dao\RoleDao.class]
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'accountDao' and 'com.pptv.ott.commodity.account.dao.AccountDao' mapperInterface
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'dictDao' and 'com.pptv.ott.commodity.dict.dao.DictDao' mapperInterface
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'goodsMapper' and 'com.pptv.ott.commodity.goods.dao.GoodsMapper' mapperInterface
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'resourcesDao' and 'com.pptv.ott.commodity.resources.dao.ResourcesDao' mapperInterface
17:05:21  DEBUG o.m.s.mapper.ClassPathMapperScanner  - Creating MapperFactoryBean with name 'roleDao' and 'com.pptv.ott.commodity.role.dao.RoleDao' mapperInterface
17:05:22  DEBUG org.apache.ibatis.logging.LogFactory  - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
17:05:23  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed configuration file: 'class path resource [mybatis-config.xml]'
17:05:23  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\account\mapper\AccountMapper.xml]'
17:05:23  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\dict\mapper\DictMapper.xml]'
17:05:23  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\goods\mapper\GoodsMapper.xml]'
17:05:23  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\resources\mapper\ResourcesMapper.xml]'
17:05:23  DEBUG o.m.spring.SqlSessionFactoryBean  - Parsed mapper file: 'file [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\classes\com\pptv\ott\commodity\role\mapper\RoleMapper.xml]'
17:05:24  DEBUG c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - Template loader path [ServletContext resource [/WEB-INF/html/]] resolved to file path [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\html]
17:05:24  INFO  c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - ClassTemplateLoader for Spring macros added to FreeMarker configuration
17:05:26  DEBUG c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - Template loader path [ServletContext resource [/WEB-INF/html/]] resolved to file path [E:\OsPlat\develop_environ\workspace4.4.1\.metadata\.plugins\org.eclipse.wst.server.core\tmp4\wtpwebapps\commodity\WEB-INF\html]
17:05:26  INFO  c.p.o.c.f.s.ShiroTagFreeMarkerConfigurer  - ClassTemplateLoader for Spring macros added to FreeMarker configuration
17:05:32  INFO  c.p.o.c.a.controller.LoginController  - 军绿色扣篮大赛份简历
17:05:32  ERROR c.p.o.c.a.controller.LoginController  - sdasdfasdf
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e0dec4]
17:05:34  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:34  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:34  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:34  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e0dec4]
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e0dec4]
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e0dec4]
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323acce9]
17:05:34  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:34  DEBUG c.p.o.c.r.d.R.findByAccountId  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:34  DEBUG c.p.o.c.r.d.R.findByAccountId  - ==>  Preparing: select DISTINCT p.* from t_resources p INNER JOIN t_role_resources rp on p.ID=rp.resources_ID INNER JOIN t_role r ON r.id=rp.ROLE_ID INNER JOIN t_account_role ur ON ur.ROLE_ID =rp.ROLE_ID INNER JOIN t_account u ON u.id = ur.USER_ID where u.id=? and u.disabled=0 and p.disabled=0 order by p.sort 
17:05:34  DEBUG c.p.o.c.r.d.R.findByAccountId  - ==> Parameters: 1(Long)
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323acce9]
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323acce9]
17:05:34  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323acce9]
17:05:35  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:35  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42b99c17]
17:05:35  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:35  DEBUG c.p.o.c.r.d.R.findByRoleId  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:35  DEBUG c.p.o.c.r.d.R.findByRoleId  - ==>  Preparing: select DISTINCT p.* from t_resources p INNER JOIN t_role_resources rp on p.ID=rp.resources_ID INNER JOIN t_role r ON r.id=rp.ROLE_ID where r.id=? and p.disabled=0 order by p.sort 
17:05:35  DEBUG c.p.o.c.r.d.R.findByRoleId  - ==> Parameters: 1(Long)
17:05:35  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42b99c17]
17:05:35  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42b99c17]
17:05:35  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42b99c17]
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53ccac1e]
17:05:45  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:45  DEBUG c.p.o.c.r.d.R.findByAccountId  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:45  DEBUG c.p.o.c.r.d.R.findByAccountId  - ==>  Preparing: select DISTINCT p.* from t_resources p INNER JOIN t_role_resources rp on p.ID=rp.resources_ID INNER JOIN t_role r ON r.id=rp.ROLE_ID INNER JOIN t_account_role ur ON ur.ROLE_ID =rp.ROLE_ID INNER JOIN t_account u ON u.id = ur.USER_ID where u.id=? and u.disabled=0 and p.disabled=0 order by p.sort 
17:05:45  DEBUG c.p.o.c.r.d.R.findByAccountId  - ==> Parameters: 1(Long)
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53ccac1e]
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53ccac1e]
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53ccac1e]
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@735c2129]
17:05:45  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:45  DEBUG c.p.o.c.r.d.R.findByRoleId  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:45  DEBUG c.p.o.c.r.d.R.findByRoleId  - ==>  Preparing: select DISTINCT p.* from t_resources p INNER JOIN t_role_resources rp on p.ID=rp.resources_ID INNER JOIN t_role r ON r.id=rp.ROLE_ID where r.id=? and p.disabled=0 order by p.sort 
17:05:45  DEBUG c.p.o.c.r.d.R.findByRoleId  - ==> Parameters: 1(Long)
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@735c2129]
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@735c2129]
17:05:45  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@735c2129]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c837fab]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==>  Preparing: select count(0) from (select * from t_account where 1=1) as tmp_count 
17:05:46  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==> Parameters: 
17:05:46  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==>  Preparing: select * from t_account where 1=1 limit 0,10 
17:05:46  DEBUG c.p.o.c.a.dao.AccountDao.listPage  - ==> Parameters: 
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c837fab]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c837fab]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c837fab]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f14c6d0]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f14c6d0]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f14c6d0]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f14c6d0]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ac1c2]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ac1c2]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ac1c2]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ac1c2]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d68210]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d68210]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d68210]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d68210]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b09be7]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b09be7]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b09be7]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b09be7]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4468a394]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4468a394]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4468a394]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4468a394]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1d7792]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1d7792]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1d7792]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d1d7792]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5787ecaf]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5787ecaf]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5787ecaf]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5787ecaf]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15587f21]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15587f21]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15587f21]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15587f21]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8173c6]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8173c6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8173c6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8173c6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e03cb03]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e03cb03]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e03cb03]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e03cb03]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713b6e50]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713b6e50]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713b6e50]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713b6e50]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a46cea8]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a46cea8]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a46cea8]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a46cea8]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b6980b1]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b6980b1]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b6980b1]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b6980b1]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3393c9e0]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3393c9e0]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3393c9e0]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3393c9e0]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b62f84]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b62f84]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b62f84]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b62f84]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d423024]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d423024]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d423024]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d423024]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1fc7d5]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1fc7d5]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1fc7d5]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d1fc7d5]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed8940f]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed8940f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed8940f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed8940f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138ce29]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138ce29]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138ce29]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138ce29]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b7a6d7]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b7a6d7]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b7a6d7]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b7a6d7]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b706d1]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b706d1]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b706d1]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b706d1]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff1d3c6]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff1d3c6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff1d3c6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff1d3c6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5b7f5f]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5b7f5f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5b7f5f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5b7f5f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6307e6]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6307e6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6307e6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6307e6]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5db87b48]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5db87b48]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5db87b48]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5db87b48]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62857b0a]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62857b0a]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62857b0a]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62857b0a]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c23cec9]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c23cec9]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c23cec9]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c23cec9]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9080bb]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9080bb]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9080bb]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9080bb]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@db4de89]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@db4de89]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@db4de89]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@db4de89]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1522a91a]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1522a91a]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1522a91a]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1522a91a]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a058635]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select count(0) from (select * from t_role where 1=1 order by sort) as tmp_count 
17:05:46  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 
17:05:46  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==>  Preparing: select * from t_role where 1=1 order by sort limit 0,10 
17:05:46  DEBUG c.p.o.c.role.dao.RoleDao.listPage  - ==> Parameters: 
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a058635]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a058635]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a058635]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@569aa6c]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@569aa6c]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@569aa6c]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@569aa6c]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541d911f]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541d911f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541d911f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541d911f]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@734574b9]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@734574b9]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@734574b9]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@734574b9]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688830cd]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688830cd]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688830cd]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688830cd]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f94706]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:46  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f94706]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f94706]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f94706]
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:46  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2710a]
17:05:46  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:46  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2710a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2710a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2710a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f658816]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f658816]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f658816]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f658816]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234d2e49]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234d2e49]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234d2e49]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234d2e49]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0f66d0]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0f66d0]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0f66d0]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0f66d0]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b30d10]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b30d10]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b30d10]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b30d10]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@307df583]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@307df583]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@307df583]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@307df583]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6011b1]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6011b1]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6011b1]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6011b1]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f821aa]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f821aa]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f821aa]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f821aa]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cffd241]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cffd241]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cffd241]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cffd241]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3eb0d8]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3eb0d8]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3eb0d8]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3eb0d8]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b542fe]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b542fe]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b542fe]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b542fe]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62439ab7]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62439ab7]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62439ab7]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62439ab7]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@274e76e1]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@274e76e1]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@274e76e1]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@274e76e1]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d528cd]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d528cd]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d528cd]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d528cd]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7056960c]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7056960c]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7056960c]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7056960c]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15606802]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15606802]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15606802]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15606802]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4113c3d2]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4113c3d2]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4113c3d2]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4113c3d2]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e25589]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e25589]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e25589]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e25589]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f5cf1ba]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f5cf1ba]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f5cf1ba]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f5cf1ba]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d47c5a]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d47c5a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d47c5a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d47c5a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3028b65a]
17:05:47  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:47  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3028b65a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3028b65a]
17:05:47  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3028b65a]
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521bd86]
17:05:48  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:48  DEBUG c.p.o.c.a.d.A.selectByUsername  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:48  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==>  Preparing: select * from t_account where 1=1 and username=? and disabled=0 
17:05:48  DEBUG c.p.o.c.a.d.A.selectByUsername  - ==> Parameters: demo(String)
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521bd86]
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521bd86]
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521bd86]
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Creating a new SqlSession
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1afef301]
17:05:48  DEBUG o.m.s.t.SpringManagedTransaction  - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04] will be managed by Spring
17:05:48  DEBUG c.p.o.c.a.d.A.findPermissions  - ooo Using Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@65d19f04]
17:05:48  DEBUG c.p.o.c.a.d.A.findPermissions  - ==>  Preparing: select DISTINCT s.permission from t_account a ,t_account_role r,t_role_resources rs,t_resources s where a.id=r.user_id and r.role_id=rs.role_id and rs.resources_id=s.id and a.username=? and a.disabled=0 
17:05:48  DEBUG c.p.o.c.a.d.A.findPermissions  - ==> Parameters: demo(String)
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1afef301]
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1afef301]
17:05:48  DEBUG org.mybatis.spring.SqlSessionUtils  - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1afef301]
